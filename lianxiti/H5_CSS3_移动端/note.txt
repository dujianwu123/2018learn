一、HTML5 
1、新增加（修改\删除）的语义化标签
  常用
  header
  footer
  main 主体
  section 区域
  article 文章区域
  aside 与内容无关的部分（例如：广告）
  nav 
  figure 配图区域
  figcaption 配图说明

  不常用：
  mark 标记
  time 时间标记
  progress 进度条
2、表单元素
  传统表单元素：
    input:text/password/radio/checkbox/file/hidden...
    select
    textarea
    form
    label
    ...

  新增加
  input : search/email/tel/number/range/color/date/time/url...
  H5中给表单元素设置了一个新的属性：placeholder 用来做文本框的默认提示的

3、音视频标签
  audio
  video
  /**
         * 关于audio的一些常用属性
         * 【属性】
         * duration 播放的总时间
         * currentTime 当前已经播放的时间
         * ended 是否已经播放完成
         * paused: 当前是否为暂停状态
         * volume: 控制音量（0-1）
         * 【方法】
         * pause()暂停
         * play()播放
         * 【事件】on+
         * canplay :可以正常播放（但是播放过程中可能出现卡顿）
         * canplaythrough: 资源加载完毕，可以顺畅的播放了
         * ended: 已经播放完成
         * loadedmetadata: 资源的基础信息已经加载完成
         * loadeddata: 整个资源都加载完成
         * pause: 触发了暂停
         * play: 触发了播放
         * playing: 正在播放中
         * 
         * 
         * 
         */
4、canvas图形绘制
5、提供了一些新的api
   本地存储:localStorage/sessionStore
   获取地理位置：navigator.geolocation.getCurrentPosition
   调取手机内部的GPS定位系统获取当前手机所在地的经纬度以及精准度等
  还提供了一些API，让我们可以通过浏览器调取手机内部的软件或者硬件（但是性能都不咋高，而且兼容性不是特别好）

6、websocket:socket.io 客户端和服务端新的传输方式（即时通讯IM系统基本上
很多都是基于它完成的）


二、css3
  学习一些样式属性和选择器就差不多了
  [选择器]
  #ID
  .CLASS
  TAG
  *
  SELECT1,SELECT1...群组选择器
  A .B{} 后代
  A.B{} 既具备A也具备.B的（同级二次筛选）
  A>B{} 子代
  A+B{} 下一个弟弟
  A~B{} 兄弟

  A[NAME=''] 属性选择器 NAME!=''  NAME^=''  NAME$=''  NAME*=''

  A:after
  A:before

  A:nth-child()
  A:nth-last-child()
  A:nth-last-of-type()
  A:NOT
  A:first-child
  A:last-child

[样式属性]
1、基本常用的
  border-radiu
  box-shadow
  text-shadow
2、背景的
  background -color/ -image / -position / -repeat / -attachment /...

  background-size: 100px 100px 宽高具体值
                   100% 100%   宽高百分比（相对于所在容器）
                   cover       以合适的比例把图片进行缩放（不会变形），用来覆盖整个容器
                   contain     背景图覆盖整个容器（但是会出现，如果一边碰到容器的边缘，则停止覆盖，导致部分区域
                   是没有背景图的） 

  background-clip: 背景图片裁切
                   border-box
                   padding-box
                   content-box
  
  background-origin: 设置背景图的起始点
                     border-box
                     padding-box
                     content-box
  
  filter
3、css3动画和变形(2D/3D)
//->变形不是动画
transform:
  translate(x|y|z) 位移
  scale  缩放
  rotate 旋转
  skew   倾斜
  matrix 矩阵（按照自己设定的矩阵公式实现变形）

transform-style: preserve-3d 实现3D变形
transform-origin: 变形的起点

//->过渡动画
  transition:
    transition-property:all/width...哪些属性样式发生改变执行过渡动画效果，默认ALL，所有样式属性改变都会执行这个过渡效果
    transition-duration: 过渡动画的时间，我们一般都用秒，例如：.5s;
    transition-timing-function: 动画运动的方式，linear(默认) ease ease-in ease-out easr-in-out cubic-bezier(执行自己设定的贝塞尔曲线)
    transition-delay：设置延迟的时间，默认是0s不延迟，立即执行动画


//->帧动画                                                    
    animation: 
        animation-name 运动轨迹的名称
        animation-duration: 运动的时长
        animation-timing-function 运动的方式(默认ease)
        animation-delay：设置延迟的时间，默认是0s不延迟，立即执行动画
        animation-iteration-count： 运动次数（默认1 infinite无限次运动）
        animation-fill-mode: 运动完成后的状态（帧动画完成后，元素会默认回到运动的起始位置，如果想让其停留在最后一帧的位置，设置这个属性值为forwards;
        backwards是当前帧动画如果有延迟时间，在延迟等待时间内，元素处于帧动画的第一帧位置:both是让帧动画同时具备forwards和backwards）
    @keyframes  [运动轨迹名称] {
      from {

      }
      to {

      }
    }
    @keyframes  [运动轨迹名称] {
      0% {

      }
      50% {
        
      }
      100% {
        
      }
    }
4、css新盒子模型
box-sizing: border-box/padding-box/content-box(default)
改变的就是我们在css中设置的width/height到底代表啥，border-box让其代表整个盒子的宽高
当我们去修改PADDING或者BORDER，盒子大小不变，只会让内容缩放

  columns: 多列布局
  flex: 弹性盒模型

5、一些其它的css3属性
  perspective:视距 实现3D动画必用的属性
  @media: 媒体查询 实现响应式布局的一种方案
  @font-face:导入字体图标










三、响应式布局开发
    响应式布局: 在不同尺寸的设备上都能良好的显示，这就是响应式布局设计
    公司产品形态:
      1、PC端
      2、pc+移动端用同一套项目（简单的页面，例如：产品介绍，公司展示页面）
      3、移动端（移动端设备尺寸差异较大，需要做响应式布局开发）
         嵌入到APP中的H5
         微信中分享出来的H5
         微信公众号
         小程序
         靠浏览器访问的H5
      4、RN（Reate Native）/ionic/cordova...JS开发APP的框架，使用JS代码开发APP，最后框架会把代码转换为 安卓和IOS 需要的代码

      如何实现响应式布局开发
        最常用的方案，REM等比缩放响应式布局

        做移动端H5开发，首先加META标签
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        
        REM和PX一样都是样式单位，PX是固定单位，REM是相对单位（相对于当前页面根元素HTML的字体设定的单位）
        我们开始给HTML的字体大小设置为100PX(1REM=100PX)，接下来我们写样式的时候，把所有的尺寸都用REM设定（测量出来的PX值/100就是应该设置的REM的值）,
        如果HTML的FONT-SIZE不变，用REM和PX一样，但是如果字体大小改变，也就是改变了REM和PX之间的换换算比例，那么之前所有用REM做单位的样式都会自动按照最新的比例
        进行缩放（实现了改动HTML的FONT-SIZE，整个页面中的元素都跟着缩放了，牵一发而动全身）

          真实项目中，设计师给给我们一套设计稿（常用的尺寸：640*1136  750*1334 640*960 ...），拿到设计稿后，我们严格按照设计稿中的尺寸去编写样式
           HTML{
              FONT-SIZE:100PX;
           }
           接下来写样式，把测量出来的PX都除以100变为REM，所有的单位基于REM来搞
           =>假设设计稿是750,也就相当于750的设备下,1REM=100PX

        我们页面运行在320的设备上，我们需要修改HTML的字体大小，以此实现页面跟着整体缩放：320/750*100 =>当前设备上HTML的字体大小


        

四、微信二次开发（小程序）=>Hybrid混合app开发

五、移动端事件
    1、oninput ,移动端没有keydown/keyup,用input代替，代表正在操作当前表单元素（例如正在输入等）
    该事件在 <input> 或 <textarea> 元素的值发生改变时触发。
