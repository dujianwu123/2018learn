/**
 * 事件绑定
 * DOM0
 *  box.onclick = function(){}
 *  每一个元素对象都是对应类的实例，浏览器天生为其设置了很多私有属性和公有的属性方法，
 *  而onclick就是其中的一个私有的属性（事件类私有属性，还有很多其它的事件私有属性），
 * 这些属性默认值是null
 * DOM0 事件绑定的原理，就是给元素的某一个事件私有属性赋值，（浏览器会建立监听机制，当我们
 * 触发元素的某个行为，浏览器会自己把属性中赋的值去执行）
 * 只允许给当前元素的某个事件行为绑定一个方法，多次绑定，后面绑定的内容会替换前面绑定的，
 * 以最后一次绑定的方法为主
 * 
 * 
 * 
 * DOM2
 *  box.addEventListener('click',function(){},false)
 *  removeEventListener
 *  box.attachEvent('click',function(){
 *    
 *  });
 * dettachEvent
 * 
 * DOM2可以给同个事件绑定多个不重复的方法
 * 
 */

 /**
  * DOM2 事件绑定的兼容
  * 1、（谷歌 VS IE高版本）
  * 在移除事件绑定的时候，如果移除操作发生在正要执行的方法之前（例如：点击的时候，正要执行FN8，但是在执行FN4的时候，我们把FN8从事件池中移除了）
  * ，在谷歌下是立即移除生效，第一次也不执行FN8了，而IE是当前本次不生效，下一次点击才生效，
  * 第一次点击还是要执行FN8
  * 
  * 2、[标准 VS IE低版本]
  * 标准：addEventListener / removeEventListener
  * IE低：attachEvent / dettachEvent
  * 
  * 标准用的是行为名称'click' ,而IE低版本使用时前面要加"onclick"
  * 
  * 1)、THIS问题
  * 标准浏览器中，行为触发方法执行，方法中的THIS是当前元素本身，IE低版本中THIS指向了WINODW
  * 
  * 2)、重复问题：标准浏览器中的事件池是默认去重复的，同一个元素的同一个事件行为不能出现相同的绑定方法，
  * 但是IE低版本的事件池机制没有这么完善，不能默认去重，也就是可以给同个元素的同个事件绑定相同的方法了
  * 
  * 3)、顺序问题
  * 标准浏览器是按照向事件池中依次存放的顺序一次执行的，而IE低版本浏览器是乱序执行的，没有规律
  * 
  * 
  * IE低版本浏览器出现的所有问题都是由于本身自带的事件池机制不完整导致的asd
  */